

@mixin Flex($dFlex:flex, $direction:row, $justify:center, $align:center) {
    display:$dFlex;
    flex-direction: $direction;
    justify-content:$justify;
    align-items: $align;
}
@mixin Img ($Width:100%, $Height: 100%, $ObjectFit: contain){
    width: $Width !important;
    height: $Height !important;
    object-fit: $ObjectFit !important;
}

@mixin backG ($BackgroundSize: cover, $backgroundPosition: center, $backgroundRepeat: no-repeat){
    background-size: $BackgroundSize;
    background-position: $backgroundPosition;
    background-repeat: $backgroundRepeat;
}
@mixin hoverScale($transition: 0.5s, $scale:1.01,$z-index:100){
	-moz-transform: scale($scale);
	-webkit-transform: scale($scale);
	-o-transform: scale($scale);
	-ms-transform: scale($scale);
	transform: scale($scale);
	z-index: $z-index;
	transition: all $transition ease;
}
@mixin trans($transition: 0.5s){
    transition: all $transition ease;
}
@mixin hoverButton($background-color: transparent, $color:#35444A, $transition: 0.5s ){
        background-color: $background-color;
        color:$color;
        transition: all $transition ease;
}
@mixin Pos ($Position: absolute, $Top:0, $Bottom: 0, $Left: 0, $Right:0 ){
    position: $Position;
    top: $Top;
    bottom: $Bottom;
    left: $Left;
    right: $Right;

}

// responsive
$grid-breakpoints: (
    xs: 0,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1400px
);

// Between breakpoints
@mixin x-small-device {
    @media (min-width: #{map-get($grid-breakpoints, 'xs')}) and (max-width: #{map-get($grid-breakpoints, 'sm') - .02px}) {
        @content;
    }
}

@mixin small-device {
    @media (min-width: #{map-get($grid-breakpoints, 'sm')}) and (max-width: #{map-get($grid-breakpoints, 'md') - .02px}) {
        @content;
    }
}

@mixin medium-device {
    @media (min-width: #{map-get($grid-breakpoints, 'md')}) and (max-width: #{map-get($grid-breakpoints, 'lg') - .02px}) {
        @content;
    }
}

@mixin large-device {
    @media (min-width: #{map-get($grid-breakpoints, 'lg')}) and (max-width: #{map-get($grid-breakpoints, 'xl') - .02px}) {
        @content;
    }
}

@mixin x-large-device {
    @media (min-width: #{map-get($grid-breakpoints, 'xl')}) and (max-width: #{map-get($grid-breakpoints, 'xxl') - .02px}) {
        @content;
    }
}

// Breakpoints down
@mixin small-device-down {
    @media (max-width: #{map-get($grid-breakpoints, 'sm') - .02px}) {
        @content;
    }
}

@mixin medium-device-down {
    @media (max-width: #{map-get($grid-breakpoints, 'md') - .02px}) {
        @content;
    }
}

@mixin large-device-down {
    @media (max-width: #{map-get($grid-breakpoints, 'lg') - .02px}) {
        @content;
    }
}

@mixin x-large-device-down {
    @media (max-width: #{map-get($grid-breakpoints, 'xl') - .02px}) {
        @content;
    }
}
@mixin xx-large-device-down {
    @media (max-width: #{map-get($grid-breakpoints, 'xxl') - .02px}) {
        @content;
    }
}

// Breakpoints up
@mixin small-device-up {
    @media (min-width: #{map-get($grid-breakpoints, 'sm')}) {
        @content;
    }
}

@mixin medium-device-up {
    @media (min-width: #{map-get($grid-breakpoints, 'md')}) {
        @content;
    }
}

@mixin large-device-up {
    @media (min-width: #{map-get($grid-breakpoints, 'lg')}) {
        @content;
    }
}

@mixin x-large-device-up {
    @media (min-width: #{map-get($grid-breakpoints, 'xl')}) {
        @content;
    }
}
@mixin xx-large-device-up {
    @media (min-width: #{map-get($grid-breakpoints, 'xxl')}) {
        @content;
    }
}
